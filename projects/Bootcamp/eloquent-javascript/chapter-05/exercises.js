// /////////////////////////////////////////////////////////////////////////////
// flatten /////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function flatten(arr) { 
  return (arr.reduce(function(x, y) {
    return x.concat(y);
  }));
}; 

// /////////////////////////////////////////////////////////////////////////////
// loop ////////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function loop(value, test, update, codeBlk) {
for (let x = value; test(x); x = update(x)) {
      codeBlk(x);
  }
}

// /////////////////////////////////////////////////////////////////////////////
// every ///////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function every(arr, test) {
  for (let index of arr) {
      if (!test(index)) {
          return false;
      }
  }

  return true;
}

// /////////////////////////////////////////////////////////////////////////////
// dominantDirection ///////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function dominantDirection(str) {
  let ltr = [];
  let rtl = [];
  for (let x = 0; x < str.length; x++){
    let script = characterScript(str.charCodeAt(x));
    if (script !== null) {
      if (script.direction === 'ltr') {
        ltr.push(script)
      } else {
        rtl.push(script)
      }
    }
  }
  if (ltr.length > rtl.length) {
    return 'ltr'
  } else {
    return 'rtl'
  }
}

// /////////////////////////////////////////////////////////////////////////////
//  //////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

if ((typeof process !== 'undefined') &&
  (typeof process.versions.node !== 'undefined')) {
  module.exports = {
    flatten,
    loop,
    every,
    dominantDirection,
  };
};
